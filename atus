[1mdiff --git a/backend/src/controllers/pokemones.ts b/backend/src/controllers/pokemones.ts[m
[1mindex 3849189..2c4de86 100644[m
[1m--- a/backend/src/controllers/pokemones.ts[m
[1m+++ b/backend/src/controllers/pokemones.ts[m
[36m@@ -3,6 +3,9 @@[m [mimport { getPokemons } from '../adapters/pokemonapi';[m
 export const getPokemones = async (req: Request, res: Response) => {[m
   const offset = parseInt(req.query.offset as string);[m
   const limit = parseInt(req.query.limit as string);[m
[32m+[m[32m  const type = req.query.type[m
[32m+[m[32m  const generation= req.query.generation[m
[32m+[m[32m  console.log(type, generation)[m
   try {[m
     const response_url = await getPokemons({ offset, limit });[m
 [m
[1mdiff --git a/frontend/src/components/filters.tsx b/frontend/src/components/filters.tsx[m
[1mindex 345d5af..b2c5148 100644[m
[1m--- a/frontend/src/components/filters.tsx[m
[1m+++ b/frontend/src/components/filters.tsx[m
[36m@@ -2,84 +2,137 @@[m [mimport { useEffect, useState } from 'react';[m
 import { useNavigate } from 'react-router-dom';[m
 import Tarjeta from './tarjetaPokemon';[m
 import Pagination from './pagination';[m
[31m-type pokemon = {[m
[31m-    name: string;[m
[31m-    ability: string;[m
[31m-    img: string;[m
[31m-    description: string;[m
[31m-    attacks:string,[m
[31m-    generation:string[m
[32m+[m[32m// type pokemon = {[m
[32m+[m[32m//     name: string;[m
[32m+[m[32m//     ability: string;[m
[32m+[m[32m//     img: string;[m
[32m+[m[32m//     description: string;[m
[32m+[m[32m//     attacks:string,[m
[32m+[m[32m//     generation:string[m
 [m
[32m+[m[32m// };[m
[32m+[m[32mtype filtersProps = {[m
[32m+[m[32m  setSelectedGeneration: (value: string | number) => void;[m
[32m+[m[32m  setSelectedType: (value: string | number) => void;[m
 };[m
[31m-function Filters() {[m
[31m-  const [selectedGeneration, setSelectedGeneration] = useState(Number);[m
[31m-  const [listPokemones, setListPokemones] = useState<pokemon[]>([]);[m
[31m-  const [paginaActual,setPaginaActual] = useState(1)[m
[31m-  const pagesTotal = Math.ceil(listPokemones.length / 20); //paginas a mostrar[m
[31m-  const navigate = useNavigate();[m
 [m
[31m-  useEffect(() => {[m
[31m-    if (selectedGeneration >= 1 && selectedGeneration <= 6) {[m
[31m-      pokemonesForGeneration();[m
[31m-    }[m
[31m-  }, [selectedGeneration]);[m
 [m
[31m-  const pokemonesForGeneration = async () => {[m
[31m-    const response = await fetch([m
[31m-      `http://localhost:3000/pokemones/generation/${selectedGeneration}`,[m
[31m-      {[m
[31m-        method: 'GET',[m
[31m-        headers: {[m
[31m-          'Content-Type': 'application/json',[m
[31m-        },[m
[31m-      }[m
[31m-    );[m
 [m
[31m-    if (response.ok) {[m
[31m-      const data = await response.json();[m
[31m-      setListPokemones(data.resultado);[m
[31m-      console.log(data.resultado);[m
[31m-    }[m
[31m-    console.log(response);[m
[31m-  };[m
[31m-  function cambiarPagina(value: number) {[m
[31m-    setPaginaActual(value);[m
[31m-  }[m
[32m+[m[32mfunction Filters({setSelectedGeneration, setSelectedType}:filtersProps) {[m
[32m+[m[32m  // const [selectedGeneration, setSelectedGeneration] = useState(Number);[m
[32m+[m[32m  // const [listPokemones, setListPokemones] = useState<pokemon[]>([]);[m
[32m+[m[32m  // const [paginaActual, setPaginaActual] = useState(1);[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  // const pagesTotal = Math.ceil(listPokemones.length / 20); //paginas a mostrar[m
[32m+[m[32m  // const navigate = useNavigate();[m
[32m+[m
[32m+[m[32m  // useEffect(() => {[m
[32m+[m[32m  //   if (selectedGeneration >= 1 && selectedGeneration <= 6) {[m
[32m+[m[32m  //     pokemonesForGeneration();[m
[32m+[m[32m  //   }[m
[32m+[m[32m  // }, [selectedGeneration]);[m
[32m+[m
[32m+[m[32m  // const pokemonesForGeneration = async () => {[m
[32m+[m[32m  //   const response = await fetch([m
[32m+[m[32m  //     `http://localhost:3000/pokemones/generation/${selectedGeneration}`,[m
[32m+[m[32m  //     {[m
[32m+[m[32m  //       method: 'GET',[m
[32m+[m[32m  //       headers: {[m
[32m+[m[32m  //         'Content-Type': 'application/json',[m
[32m+[m[32m  //       },[m
[32m+[m[32m  //     }[m
[32m+[m[32m  //   );[m
[32m+[m
[32m+[m[32m  //   if (response.ok) {[m
[32m+[m[32m  //     const data = await response.json();[m
[32m+[m[32m  //     setListPokemones(data.resultado);[m
[32m+[m[32m  //     console.log(data.resultado);[m
[32m+[m[32m  //   }[m
[32m+[m[32m  //   console.log(response);[m
[32m+[m[32m  // };[m
[32m+[m[32m  // function cambiarPagina(value: number) {[m
[32m+[m[32m  //   setPaginaActual(value);[m
[32m+[m[32m  // }[m
[32m+[m[32mconst FiltersType = [[m
[32m+[m[32m  { value: 'Bug', label: 'üêõ Bug' },[m
[32m+[m[32m  { value: 'Dark', label: 'üåë Dark' },[m
[32m+[m[32m  { value: 'Dragon', label: 'üêâ Dragon' },[m
[32m+[m[32m  { value: 'Electric', label: '‚ö° Electric' },[m
[32m+[m[32m  { value: 'Fairy', label: 'üßö‚Äç‚ôÄÔ∏è Fairy' },[m
[32m+[m[32m  { value: 'Fighting', label: 'ü•ä Fighting' },[m
[32m+[m[32m  { value: 'Fire', label: 'üî• Fire' },[m
[32m+[m[32m  { value: 'Flying', label: 'ü¶Ö Flying' },[m
[32m+[m[32m  { value: 'Ghost', label: 'üëª Ghost' },[m
[32m+[m[32m  { value: 'Grass', label: 'üåø Grass' },[m
[32m+[m[32m  { value: 'Ground', label: 'üåç Ground' },[m
[32m+[m[32m  { value: 'Ice', label: '‚ùÑÔ∏è Ice' },[m
[32m+[m[32m  { value: 'Normal', label: 'üåÄ Normal' },[m
[32m+[m[32m  { value: 'Poison', label: 'üíÄ Poison' },[m
[32m+[m[32m  { value: 'Psychic', label: 'üîÆ Psychic' },[m
[32m+[m[32m  { value: 'Rock', label: 'ü™® Rock' },[m
[32m+[m[32m  { value: 'Steel', label: 'üõ†Ô∏è Steel' },[m
[32m+[m[32m  { value: 'Water', label: 'üíß Water' },[m
[32m+[m[32m  { value: 'Shadow', label: 'Shadow' },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m  const FiltersGeneration=[[m
[32m+[m[32m    {value: 1 ,label:'I'},[m
[32m+[m[32m    {value: 2 ,label:'II'},[m
[32m+[m[32m    {value: 3 ,label:'III'},[m
[32m+[m[32m    {value: 4 ,label:'IV'},[m
[32m+[m[32m    {value: 5 ,label:'V'},[m
[32m+[m[32m    {value: 6 ,label:'VI'}[m
[32m+[m[32m  ][m
 [m
   return ([m
     <div className=' flex flex-wrap gap-4 justify-center items-center mb-4'>[m
       <label className='block text-center bg-sky-200 m-1 p-2  rounded-xl'>[m
         Type:[m
[31m-        <select name='selectedType'>[m
[31m-          <option value='Normal'>Normal</option>[m
[31m-          <option onChange={() => {}} value='Pighting'>[m
[31m-            Pighting[m
[31m-          </option>[m
[31m-          <option value='Poison'>Poison</option>[m
[32m+[m[32m        <select[m
[32m+[m[32m          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {[m
[32m+[m[32m            setSelectedType(e.target.value);[m
[32m+[m[32m          }}[m
[32m+[m[32m          name='selectedType'[m
[32m+[m[32m        >[m
[32m+[m[32m          <option>all</option>[m
[32m+[m[32m          {FiltersType.map(option => ([m
[32m+[m[32m            <option[m
[32m+[m[32m              className='bg-[rgb(128,128,128)]'[m
[32m+[m[32m              value={option.value}[m
[32m+[m[32m              key={option.value}[m
[32m+[m[32m            >[m
[32m+[m[32m              {option.label}[m
[32m+[m[32m            </option>[m
[32m+[m[32m          ))}[m
         </select>[m
       </label>[m
       <label className='block text-center  bg-sky-200 p-2   rounded-xl'>[m
         Generation:[m
         <select[m
           onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {[m
[31m-            navigate('/pokemones/generation/' + e.target.value);[m
             setSelectedGeneration(Number(e.target.value));[m
[32m+[m[32m            // navigate('/pokemones/generation/' + e.target.value);[m
[32m+[m[32m            // setSelectedGeneration(Number(e.target.value));[m
           }}[m
           name='selectedGeneracion'[m
         >[m
[31m-          <option></option>[m
[31m-[m
[31m-          <option value={1}>I</option>[m
[31m-          <option value={2}>II</option>[m
[31m-          <option value={3}>III</option>[m
[31m-          <option value={4}>IV</option>[m
[31m-          <option value={5}>V</option>[m
[31m-          <option value={6}>VI</option>[m
[32m+[m[32m          <option>all</option>[m
[32m+[m[32m          {FiltersGeneration.map(option => ([m
[32m+[m[32m            <option value={option.value} key={option.value}>[m
[32m+[m[32m              {option.label}[m
[32m+[m[32m            </option>[m
[32m+[m[32m          ))}[m
         </select>[m
       </label>[m
[31m-      <Pagination totalPaginas={pagesTotal} paginaActual={paginaActual} siblings={1} cambiar={cambiarPagina}/>[m
[32m+[m[32m      {/* <Pagination[m
[32m+[m[32m        totalPaginas={pagesTotal}[m
[32m+[m[32m        paginaActual={paginaActual}[m
[32m+[m[32m        siblings={1}[m
[32m+[m[32m        cambiar={cambiarPagina}[m
[32m+[m[32m      /> */}[m
 [m
[31m-      {listPokemones.map(pokemon => ([m
[32m+[m[32m      {/* {listPokemones.map(pokemon => ([m
         <Tarjeta[m
           key={pokemon.name}[m
           name={pokemon.name}[m
[36m@@ -89,17 +142,6 @@[m [mfunction Filters() {[m
           attacks={pokemon.attacks}[m
           generation={pokemon.generation}[m
         />[m
[31m-      ))}[m
[31m-[m
[31m-      {/* {listPokemones.map(pokemon => ([m
[31m-        // <Tarjeta[m
[31m-        //   key={pokemon.name}[m
[31m-        //   name={pokemon.name}[m
[31m-        //   habilidades={pokemon.habilidades}[m
[31m-        //   foto={pokemon.foto}[m
[31m-        //   description={pokemon.description}[m
[31m-        //   generation={pokemon.generation}[m
[31m-        // />[m
       ))} */}[m
     </div>[m
   );[m
[1mdiff --git a/frontend/src/components/pagination.tsx b/frontend/src/components/pagination.tsx[m
[1mindex f3ea952..8f57444 100644[m
[1m--- a/frontend/src/components/pagination.tsx[m
[1m+++ b/frontend/src/components/pagination.tsx[m
[36m@@ -9,7 +9,6 @@[m [minterface PaginationProps {[m
 function Pagination(props: PaginationProps) {[m
 [m
     const arrayItemsPag = ReturnPaginationRange(props.totalPaginas, props.paginaActual, props.siblings)[m
[31m-    console.log(arrayItemsPag)[m
     return ([m
         <div>[m
             <div className="flex items-center justify-between border-t border-white/10 px-4 py-3 sm:px-6">[m
[1mdiff --git a/frontend/src/pages/pokemones.tsx b/frontend/src/pages/pokemones.tsx[m
[1mindex 13f1903..5afae75 100644[m
[1m--- a/frontend/src/pages/pokemones.tsx[m
[1m+++ b/frontend/src/pages/pokemones.tsx[m
[36m@@ -2,7 +2,7 @@[m [mimport { useEffect, useState } from 'react';[m
 import Tarjeta from '../components/tarjetaPokemon';[m
 import Pagination from '../components/pagination';[m
 import Filters from '../components/filters';[m
[31m-[m
[32m+[m[32mimport { useSearchParams } from 'react-router-dom';[m
 type Pokemon = {[m
   [m
   name: string;[m
[36m@@ -16,17 +16,38 @@[m [mtype Pokemon = {[m
 function Pokemones() {[m
   const [listaPokemones, setListaPokemones] = useState<Pokemon[]>([]);[m
   const [registros, setRegistros] = useState(0);[m
[31m-  const [paginaActual, setPaginaActual] = useState(1);[m
[32m+[m[32mconst[serchParams,setSerchParams]=useSearchParams()[m
[32m+[m
[32m+[m[32mconst filterPaginaName = 'pagina';[m
[32m+[m[32mconst filterGenerationName='generation'[m
[32m+[m[32mconst filtertype ='type'[m
[32m+[m
[32m+[m[41m [m
[32m+[m[32mconst paginaActual=Number(serchParams.get('pagina'))||1[m
[32m+[m[32mconst type = serchParams.get('type')|| ''[m
[32m+[m[32mconst generation = serchParams.get('generation')||''[m
[32m+[m
   const limite = 20;[m
   const totalPag = Math.ceil(registros / limite);[m
[32m+[m
[32m+[m
   useEffect(() => {[m
     const offset = (paginaActual - 1) * limite;[m
[31m-    pedirDatosPokemones(offset, limite);[m
[31m-  }, [paginaActual, totalPag]);[m
[32m+[m[32m    pedirDatosPokemones(offset, limite,type,generation);[m
[32m+[m[32m  }, [paginaActual, totalPag, type,generation]);[m
 [m
[31m-  const pedirDatosPokemones = async (offset: number, limite: number) => {[m
[32m+[m
[32m+[m[32m  const pedirDatosPokemones = async (offset: number, limite: number,type:string, generation:string) => {[m
[32m+[m
[32m+[m[32m    const queryParams=new URLSearchParams({[m
[32m+[m[32m      offset: offset.toString(),[m
[32m+[m[32m      limit:limite.toString(),[m
[32m+[m[32m      ...(type&&{type:type}),[m
[32m+[m[32m      ...(generation&&{generation:generation})[m
[32m+[m[32m    })[m
     const response = await fetch([m
[31m-      `http://localhost:3000/pokemones?offset=${offset}&limit=${limite}`,[m
[32m+[m[32m      `http://localhost:3000/pokemones?${queryParams}`,[m
[32m+[m[41m      [m
       {[m
         method: 'GET',[m
         headers: {[m
[36m@@ -35,15 +56,23 @@[m [mfunction Pokemones() {[m
       }[m
     );[m
     if (response.ok) {[m
[32m+[m[32m          console.log(queryParams, 'queryparams');[m
[32m+[m
       const data = await response.json();[m
       setListaPokemones(data.resultado);[m
       setRegistros(data.infoPages);[m
     }[m
   };[m
 [m
[31m-  function cambiarPagina(value: number) {[m
[31m-    setPaginaActual(value);[m
[32m+[m[32mconst handleChangeFilters=(filters:string)=>{[m
[32m+[m
[32m+[m[32m  return(value:string | number)=>{[m
[32m+[m[32m    setSerchParams({[m
[32m+[m[32m      ...Object.fromEntries(serchParams.entries()),[m
[32m+[m[32m      [filters]:value.toString()[m
[32m+[m[32m    })[m
   }[m
[32m+[m[32m}[m
 [m
   return ([m
     <div className=' flex flex-col items-center  '>[m
[36m@@ -51,9 +80,12 @@[m [mfunction Pokemones() {[m
         totalPaginas={totalPag}[m
         paginaActual={paginaActual}[m
         siblings={1}[m
[31m-        cambiar={cambiarPagina}[m
[32m+[m[32m        cambiar={handleChangeFilters(filterPaginaName)}[m
[32m+[m[32m      />[m
[32m+[m[32m      <Filters[m
[32m+[m[32m        setSelectedGeneration={handleChangeFilters(filterGenerationName)}[m
[32m+[m[32m        setSelectedType={handleChangeFilters(filtertype)}[m
       />[m
[31m-      <Filters />[m
 [m
       <div className='grid grid-cols-5 gap-4 w-[90%] h-[485px] overflow-y-auto overflow-x-hidden  bg-write  '>[m
         {listaPokemones.map(pokemon => ([m
[1mdiff --git a/frontend/src/routers/routers.tsx b/frontend/src/routers/routers.tsx[m
[1mindex 8c98de6..97bd315 100644[m
[1m--- a/frontend/src/routers/routers.tsx[m
[1m+++ b/frontend/src/routers/routers.tsx[m
[36m@@ -1,6 +1,5 @@[m
 import { BrowserRouter, Route, Routes } from 'react-router-dom';[m
 import Home from '../pages/home';[m
[31m-import Pokemones from '../pages/pokemones';[m
 import Navar from '../pages/navar';[m
 import Filters from '../components/filters';[m
 import Login from '../components/login';[m
[36m@@ -10,8 +9,8 @@[m [mconst Rutas = () => {[m
     <BrowserRouter>[m
       <Navar />[m
       <Routes>[m
[32m+[m
         <Route path='/' element={<Home />} />[m
[31m-        <Route path='/pokemones' element={<Pokemones />} />[m
         <Route path='/pokemones/generation/:generation' element={<Filters />} />[m
         <Route path='/login' element={<Login />} /> {/*borra mas tarde */}[m
       </Routes>[m
